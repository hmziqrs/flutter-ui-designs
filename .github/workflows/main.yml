on:
  push:
    tags:
      - "*"

name: Release Builds
jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.5"
          channel: "stable"

      - uses: actions/checkout@v4
        with:
          path: "app"

      - name: Install required build tools for linux
        run: |
          sudo apt-get update -y
          sudo apt-get upgrade -y
          sudo apt-get install -y curl git unzip xz-utils zip libglu1-mesa
          sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev

      - run: |
          cd app
          flutter config --enable-linux-desktop
          flutter pub get
          flutter build linux --release
          cd build/linux/x64/release
          zip -r linux-release.zip bundle

      - name: Create linux Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "app/build/linux/x64/release/linux-release.zip"
          token: ${{ secrets.TOKEN }}
          allowUpdates: true

  web:
    name: Web
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.5"
          channel: "stable"

      - uses: actions/checkout@v4
        with:
          path: "app"
      - uses: oven-sh/setup-bun@v2
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build web release
        run: |
          cd app
          flutter config --enable-web
          flutter pub get
          flutter build web -t lib/main.web.dart --release --no-tree-shake-icons --wasm

      - name: Deploy cloudflare pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          packageManager: "bun"
          command: pages deploy ./app/build/web --project-name=flutter-uis --branch=main

      # Deploy to Firebase
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          PROJECT_PATH: "app"
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

      # GitHub Pages deployment steps
      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: app/build/web

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  android:
    name: Android
    runs-on: ubuntu-latest
    steps:
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.2"
          channel: "stable"

      - uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "oracle"

      - uses: actions/checkout@v4
        with:
          path: "app"

      - uses: actions/checkout@v4
        with:
          repository: "hmziqrs/keys-n-stuff"
          path: "app/.keys-n-stuff"
          token: ${{ secrets.TOKEN }}

      - name: Execute Keys n Stuff
        run: |
          cd app
          dart ./scripts/keys-n-stuff.dart

      - run: |
          cd app
          flutter pub get
          dart scripts/version_sync.dart
          flutter build apk -t lib/main.firebase.dart --release
          flutter build appbundle -t lib/main.firebase.dart --release

      - name: Create Android Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "app/build/app/outputs/apk/release/app-release.apk,app/build/app/outputs/bundle/release/app-release.aab"
          token: ${{ secrets.TOKEN }}
          allowUpdates: true

      - name: Upload app bundle to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: "app/service-account.json"
          packageName: "com.onemdev.flutter_ui_challenges"
          releaseFile: app/build/app/outputs/bundle/release/app-release.aab
          track: "beta"
          inAppUpdatePriority: 3
          status: completed

      - uses: actions/upload-artifact@v4
        with:
          name: "app-release.aab"
          path: "app/build/app/outputs/bundle/release/app-release.aab"
      - uses: actions/upload-artifact@v4
        with:
          name: "app-release.apk"
          path: "app/build/app/outputs/apk/release/app-release.apk"

  macos:
    name: MacOS
    runs-on: macos-latest
    steps:
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.2"
          channel: "stable"

      - uses: actions/checkout@v4
        with:
          path: "app"

      - uses: actions/checkout@v4
        with:
          repository: "hmziqrs/keys-n-stuff"
          path: "app/.keys-n-stuff"
          token: ${{ secrets.TOKEN }}

      - name: Execute Keys n Stuff
        run: |
          cd app
          dart ./scripts/keys-n-stuff.dart

      - run: |
          cd app
          flutter config --enable-macos-desktop
          flutter pub global activate flutterfire_cli
          flutter pub get
          flutter build macos -t lib/main.firebase.dart --release
          cd build/macos/Build/Products/Release
          ditto -c -k --sequesterRsrc --keepParent flutter_uis.app macos-release.zip

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "app/build/macOS/Build/Products/Release/macos-release.zip"
          token: ${{ secrets.TOKEN }}
          allowUpdates: true

  windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.5"
          channel: "stable"

      - uses: actions/checkout@v4
        with:
          path: "app"

      - run: |
          cd app
          flutter config --enable-windows-desktop
          flutter pub get
          flutter build windows --release
          cd build\windows\x64\runner
          Compress-Archive -Path Release -DestinationPath windows-release.zip

      - name: Windows release build for github
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'app\build\windows\x64\runner\windows-release.zip'
          token: ${{ secrets.TOKEN }}
          allowUpdates: true
