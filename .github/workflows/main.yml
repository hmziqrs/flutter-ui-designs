on:
  push:
    tags:
      - "*"

name: Release Builds
jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.4"
          channel: "stable"

      - uses: actions/checkout@v4
        with:
          path: "app"

      - name: Install required build tools for linux
        run: |
          sudo apt-get update -y
          sudo apt-get upgrade -y
          sudo apt-get install -y curl git unzip xz-utils zip libglu1-mesa
          sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev

      - run: |
          cd app
          flutter config --enable-linux-desktop
          flutter pub get
          flutter build linux --release
          cd build/linux/x64/release
          zip -r linux-release.zip bundle

      - name: Create linux Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "app/build/linux/x64/release/linux-x64.zip,app/build/linux/arm64/release/linux-arm64.zip"
          token: ${{ secrets.TOKEN }}
          allowUpdates: true

  web:
    name: Web
    runs-on: ubuntu-latest
    steps:
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.4"
          channel: "stable"

      - uses: actions/checkout@v4
        with:
          path: "app"

      - name: Build web release
        run: |
          cd app
          flutter config --enable-web
          flutter pub get
          flutter build web -t lib/main.web.dart --release --no-tree-shake-icons --wasm

      - name: Copy privacy policy
        run: |
          cd app
          cp privacy-policy/index.html build/web/privacy-policy.html

      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          PROJECT_PATH: "app"
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

  android:
    name: Android
    runs-on: ubuntu-latest
    steps:
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.2"
          channel: "stable"

      - uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "oracle"

      - uses: actions/checkout@v4
        with:
          path: "app"
      - run: |
          cd app
          flutter pub get
          flutter build apk -t lib/main.firebase.dart --release

      - name: Create Android Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "app/build/app/outputs/apk/release/app-release.apk"
          token: ${{ secrets.TOKEN }}
          allowUpdates: true

  macos:
    name: MacOS
    runs-on: macos-latest
    steps:
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.2"
          channel: "stable"

      - uses: actions/checkout@v4
        with:
          path: "app"

      - run: |
          cd app
          flutter config --enable-macos-desktop
          flutter pub global activate flutterfire_cli
          flutter pub get
          flutter build macos -t lib/main.firebase.dart --release
          cd build/macos/Build/Products/Release
          ditto -c -k --sequesterRsrc --keepParent flutter_uis.app macos-release.zip

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "app/build/macOS/Build/Products/Release/macos-release.zip"
          token: ${{ secrets.TOKEN }}
          allowUpdates: true

  windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.4"
          channel: "stable"

      - uses: actions/checkout@v4
        with:
          path: "app"

      - run: |
          cd app
          flutter config --enable-windows-desktop
          flutter pub get
          flutter build windows --release
          cd build\windows\x64\runner
          Compress-Archive -Path Release -DestinationPath windows-release.zip

      - name: Windows release build for github
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'app\build\windows\runner\windows-release.zip'
          token: ${{ secrets.TOKEN }}
          allowUpdates: true
